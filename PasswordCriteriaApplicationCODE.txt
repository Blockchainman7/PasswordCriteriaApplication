
import java.ioBufferedreader;

import java.io File;

import java.io.FilenotfoundExplorer;

import java.io FileReader;

import java.io.ioexception;

Public class lab{

public static void main(string[] args){

// read a file of passwords 

String filename = ''c:\\              \\files'';

String[] passswords= newString[13];

File file = newfile(filename);

try{

BufferedReader br= new BufferedReader (newfileReader(file));

For(int i=0; i< passwords.length; i++){

passwords[i]= br.readline();

}

}catch (filenotfoundexception e){ system.out.printIn('' Error: Could not open file'');

} catch (IOException e) {syste,.out.printIn(''Error: could not read file''); }

// Test Your Criteria 

For(String password: passswords){

system.out.printIn(''****#n'' + passwords);

boolean hasnumber=false;

boolean hasLetter= false;

boolean hasspecialChar= false;

boolean hasInvalidChar= false;

For (Int n=0;n<password.length();n++){

//condition: contains number

If (''0123456789''.conyains(password substring(n,n++))){

hasNumber=True;

System.out.printIn(''Position'' + n + ''contains a number'');

}

// condition2 : contains letter

Else If (''abcdefghijklmnopqrstuvwxyz''.contains(password.SubString(n,n+1).toLowerCase())){

hasLetter= True;

System.out.printIn(''Position''.+n+''contains a letter'');

}

// Condition 3: contains special character !@#$

else If (''!@#$%^&*90-_=+''). contains(password.substring(n,n+1))){

hasspecialChar=True;

System.out.printIn(''position''+ n + ''contains a special character'');

}

Else{

try{throw now invalidcharacterexception(password.substring(n,n+1));

}catch(InvalidChaarcterException e)

{e.toString(); break;}

}

// Test & Eception Handling 

Try{

If (!hasnumber){ throw now NumberCriteriaException(password);}

Else If (!hasletter) { throw now LetterCriteriaException(password);}

Else If(!hasspecialChar){ throw now SpecialCriteriaException(password); }

}catch(NumberCriteriaException I LetterCriteriaException I SpecialCriteriaException e){

System.Out.PrintIn(e. toString());

}}}}

class Invalidcharacterexception extends exception{

String ch;

public InvalidCharacterException(String ch){

this.ch=ch;

}

Public String toString(){

return ''InvalidCharacterException:'' + ch;

}}